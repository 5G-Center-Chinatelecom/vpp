stages:
- prepare
- build
- test

variables:
  REGISTRY: "quay.io"
  CONTAINER_IMAGE: travelping/upf
  # this points to buildkitd k8s service
  BUILDKITD_ADDR: tcp://buildkitd:1234
  # This is needed to disable TLS in recent docker:...dind images.
  # TLS there is not really needed as docker client connects
  # to localhost, and all of the docker certs only cause problems
  # here
  DOCKER_TLS_CERTDIR: ""

# prepare build image
prepare:
  stage: prepare
  # image: moby/buildkit:v0.7.1@sha256:530396a0ef93eacc025dadeb6a8a69d8c87ca402f48df9bc7c8c767b46fe9cf3
  image: docker:git
  services:
  - docker:19.03.8-dind
  script:
  - export DOCKER_HOST="tcp://localhost:2375"
  - echo "quay.io login..."
  - docker login -u ${QUAY_USER_ID} -p ${QUAY_TOKEN} ${REGISTRY}
  - echo "Ensuring that proper build image exists ..."
  - PUSH_BUILD_IMAGE=1 sh extras/docker/ensure-build-image.sh
  # FIXME: push from buildkit to quay.io fails with '401 UNAUTHORIZED'
  # for some reason, and it only happens with build images
  # - echo "registry login..."
  # # 'docker' command not available in the buildkit image
  # - >
  #   REGISTRY_LOGIN=${QUAY_USER_ID}
  #   REGISTRY_PASSWORD=${QUAY_TOKEN}
  #   extras/docker/registry-login.sh "${REGISTRY}"
  # - echo "Ensuring that proper build image exists ..."
  # - USE_BUILDCTL=1 PUSH_BUILD_IMAGE=1 sh extras/docker/ensure-build-image.sh
  only:
    changes:
    - .gitlab-ci.yml
    - Makefile
    - extras/docker/Dockerfile.build
    - build/external/**/*

# build container image
.build:
  stage: build
  image: quay.io/travelping/upf-build:f955d38d530fe59920c8fff355bb89fb # XX_DO_NOT_REMOVE_THIS_COMMENT
  script:
  - >
    REGISTRY_LOGIN=${QUAY_USER_ID}
    REGISTRY_PASSWORD=${QUAY_TOKEN}
    extras/docker/ci-build.sh
  - mv /tmp/_out "${CI_BUILD_NAME##*:}"
  dependencies:
  - prepare

# build container image
build:release:
  extends: .build
  variables:
    DOCKERFILE: Dockerfile
  artifacts:
    when: always
    untracked: true
    paths:
    - release/debs
    - release/testfiles.tar.gz

build:debug:
  extends: .build
  variables:
    DOCKERFILE: Dockerfile.devel
  artifacts:
    when: always
    untracked: true
    paths:
    - debug/debs
    - debug/testfiles.tar.gz

.test:
  stage: test
  # the following is updated automatically by extras/docker/update-build-image-tag.sh
  image: quay.io/travelping/upf-build:f955d38d530fe59920c8fff355bb89fb # XX_DO_NOT_REMOVE_THIS_COMMENT
  script:
  - tar -xvzf ${TEST_ARCHIVE}
  # temporary workaround for the hugepages issue
  - sysctl vm.nr_hugepages=0
  - |
    mkdir test-out
    export LC_ALL=C.UTF-8
    export LANG=C.UTF-8
    if ! make -j8 ${TEST_TARGET} TEST=test_upf V=1; then
      tar -C /tmp -cvzf test-out/vpp-test.tar.gz . || true
      tar -C build-root/install-vpp_debug-native/ \
          -cvzf test-out/vpp.tar.gz vpp
      ls -l test-out/
      exit 1
    fi
  artifacts:
    when: on_failure
    paths:
    - test-out

test:debug:
  extends: .test
  variables:
    TEST_ARCHIVE: debug/testfiles.tar.gz
    TEST_TARGET: retest-debug
  dependencies:
  - build:debug

test:release:
  extends: .test
  variables:
    TEST_ARCHIVE: release/testfiles.tar.gz
    TEST_TARGET: retest
  dependencies:
  - build:release

.test-ext:
  stage: test
  image: quay.io/travelping/upf-test:c0707fb
  services:
  - docker:19.03.8-dind
  script:
  # https://github.com/docker/compose/issues/5696#issuecomment-377906769
  - export COMPOSE_INTERACTIVE_NO_CLI=1
  - CI_COMMIT_DESCRIBE=$(git describe --always --tags --dirty --first-parent)
  - CONTAINER_VARIANT=debug
  - CONTAINER_BASE_NAME=${REGISTRY}/${CONTAINER_IMAGE}:${CI_COMMIT_REF_SLUG}
  - CONTAINER_GIT_DESCRIBE=${CONTAINER_BASE_NAME}_${CI_COMMIT_DESCRIBE}_${CONTAINER_VARIANT}
  # - pwd
  # - SRC_DIR="${PWD}"
  - cd /test
  # temporary workaround for the hugepages issue
  - sysctl vm.nr_hugepages=0
  - |
    if bash -x scripts/test.sh "${CONTAINER_GIT_DESCRIBE}" ${TEST_PROFILES}; then
      r=0
    else
      r=1
    fi
    mv /test/pcaps "/builds/${CI_PROJECT_PATH}/pcaps"
    ls -l "/builds/${CI_PROJECT_PATH}/pcaps"
    exit ${r}
  dependencies:
  - build:debug
  artifacts:
    when: always
    paths:
    - pcaps

test:external-ipv4-ping:
  extends: .test-ext
  variables:
    TEST_PROFILES: type-tdf dispatch-trace proxy ping gdb-batch

test:external-ipv4-udp:
  extends: .test-ext
  variables:
    TEST_PROFILES: type-tdf dispatch-trace proxy udp gdb-batch

test:external-ipv4-curl:
  extends: .test-ext
  variables:
    TEST_PROFILES: type-tdf dispatch-trace proxy curl gdb-batch

test:external-ipv4-curl-noproxy:
  extends: .test-ext
  variables:
    TEST_PROFILES: type-tdf dispatch-trace curl gdb-batch

test:external-ipv6-udp:
  extends: .test-ext
  variables:
    TEST_PROFILES: type-tdf dispatch-trace proxy udp gdb-batch ipv6

test:external-proxy-crash:
  extends: .test-ext
  variables:
    TEST_PROFILES: type-tdf dispatch-trace proxy wrk gdb-batch

test:external-proxy-crash-netem:
  extends: .test-ext
  variables:
    TEST_PROFILES: type-tdf dispatch-trace proxy wrk netem gdb-batch

test:session-deletion:
  extends: .test-ext
  variables:
    TEST_PROFILES: type-tdf dispatch-trace proxy repeat-session wrk gdb-batch
